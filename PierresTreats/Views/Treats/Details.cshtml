@model PierresTreats.Models.Treat

@using PierresTreats.Models;

<div class="card">
  <div class="card-body">
    <h2 class="card-title">Pierre's Treat Details</h2>

    <h3>@Model.TreatName</h3>
    <h6>Quantity: @Model.TreatQuantity</h6>

    <h4>Flavors:</h4>

    @if (@Model.JoinEntities.Count == 0)
    {
      @if (Model.JoinEntities.Count == 0)
      {
        <p>No flavors have been added to this treat yet.</p>
      }
    }
    else
    {
      @foreach (FlavorTreat join in Model.JoinEntities)
      {
        <h5>@Html.ActionLink($"{join.Flavor.FlavorName}", "Details", "Flavors", new { id = join.Flavor.FlavorId })</h5>
        @using (Html.BeginForm("DeleteJoin", "Treats"))
        {
          @Html.Hidden("joinId", join.FlavorTreatId)
          <input type="submit" value="Delete" />
        }
      }
    }

    <button class="btn btn-danger">@Html.ActionLink("Delete Treat", "Delete", new { id = Model.TreatId })</button>
    <button class="btn btn-primary">@Html.ActionLink("Add a flavor", "AddFlavor", new { id = Model.TreatId })</button>
    <button class="btn btn-primary">@Html.ActionLink("Add another Treat", "Create")</button>
    <button class="btn btn-primary">@Html.ActionLink("Edit Treat", "Edit", new { id = Model.TreatId })</button>
    <button class="btn btn-primary">@Html.ActionLink("Back to List", "Index")</button>
  </div>
</div>
